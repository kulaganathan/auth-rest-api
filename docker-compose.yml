version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/setup-postgresql.sql:/docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-server:
    build: .
    container_name: auth-server
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_MAIL_HOST=mailhog
      - SPRING_MAIL_PORT=1025
      - APP_EMAIL_VERIFICATION_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src/main/resources/keys:/app/keys:ro
    profiles:
      - dev

  mailhog:
    image: mailhog/mailhog:latest
    container_name: auth-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: auth-network
